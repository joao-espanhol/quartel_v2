# Generated by Django 5.1.1 on 2024-09-05 19:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subunidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Refeicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CAFE', 'Café da Manhã'), ('ALMO', 'Almoço'), ('JANT', 'Jantar'), ('CEIA', 'Ceia')], max_length=4)),
                ('data', models.DateField()),
                ('usuario', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idt_mil', models.CharField(max_length=10, unique=True)),
                ('posto', models.CharField(choices=[('Gen Ex', 'General de Exército'), ('Gen Div', 'General de Divisão'), ('Gen Bda', 'General de Brigada'), ('Cel', 'Coronel'), ('Ten Cel', 'Tenente Coronel'), ('Maj', 'Major'), ('Cap', 'Capitão'), ('1º Ten', '1º Tenente'), ('2º Ten', '2º Tenente'), ('Asp', 'Aspirante'), ('S Ten', 'Subtenente'), ('1º Sgt', '1º Sargento'), ('2º Sgt', '2º Sargento'), ('3º Sgt', '3º Sargento'), ('Cb', 'Cabo'), ('Sd', 'Soldado')], max_length=20)),
                ('nome', models.CharField(max_length=100)),
                ('nome_guerra', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence.', related_name='customuser_groups', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='customuser_permissions', to='auth.permission', verbose_name='permissões de usuário')),
                ('subunidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='arranchamento.subunidade')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
